#
# NetBox REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 3.7.8 (3.7)
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Adds support for custom fields and tags.

.PARAMETER L2vpn
No description available.
.PARAMETER AssignedObjectType
No description available.
.PARAMETER AssignedObjectId
No description available.
.PARAMETER Tags
No description available.
.PARAMETER CustomFields
No description available.
.OUTPUTS

PatchedWritableL2VPNTerminationRequest<PSCustomObject>
#>

function Initialize-PatchedWritableL2VPNTerminationRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${L2vpn},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AssignedObjectType},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${AssignedObjectId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Tags},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Collections.Hashtable]
        ${CustomFields}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => PatchedWritableL2VPNTerminationRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($AssignedObjectId -and $AssignedObjectId -gt 9223372036854775807) {
          throw "invalid value for 'AssignedObjectId', must be smaller than or equal to 9223372036854775807."
        }

        if ($AssignedObjectId -and $AssignedObjectId -lt 0) {
          throw "invalid value for 'AssignedObjectId', must be greater than or equal to 0."
        }


        $PSO = [PSCustomObject]@{
            "l2vpn" = ${L2vpn}
            "assigned_object_type" = ${AssignedObjectType}
            "assigned_object_id" = ${AssignedObjectId}
            "tags" = ${Tags}
            "custom_fields" = ${CustomFields}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PatchedWritableL2VPNTerminationRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to PatchedWritableL2VPNTerminationRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PatchedWritableL2VPNTerminationRequest<PSCustomObject>
#>
function ConvertFrom-JsonToPatchedWritableL2VPNTerminationRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => PatchedWritableL2VPNTerminationRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PatchedWritableL2VPNTerminationRequest
        $AllProperties = ("l2vpn", "assigned_object_type", "assigned_object_id", "tags", "custom_fields")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "l2vpn"))) { #optional property not found
            $L2vpn = $null
        } else {
            $L2vpn = $JsonParameters.PSobject.Properties["l2vpn"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "assigned_object_type"))) { #optional property not found
            $AssignedObjectType = $null
        } else {
            $AssignedObjectType = $JsonParameters.PSobject.Properties["assigned_object_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "assigned_object_id"))) { #optional property not found
            $AssignedObjectId = $null
        } else {
            $AssignedObjectId = $JsonParameters.PSobject.Properties["assigned_object_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tags"))) { #optional property not found
            $Tags = $null
        } else {
            $Tags = $JsonParameters.PSobject.Properties["tags"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "custom_fields"))) { #optional property not found
            $CustomFields = $null
        } else {
            $CustomFields = $JsonParameters.PSobject.Properties["custom_fields"].value
        }

        $PSO = [PSCustomObject]@{
            "l2vpn" = ${L2vpn}
            "assigned_object_type" = ${AssignedObjectType}
            "assigned_object_id" = ${AssignedObjectId}
            "tags" = ${Tags}
            "custom_fields" = ${CustomFields}
        }

        return $PSO
    }

}

