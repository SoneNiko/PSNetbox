#
# NetBox REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 3.7.8 (3.7)
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Value
* `text` - Text * `longtext` - Text (long) * `integer` - Integer * `decimal` - Decimal * `boolean` - Boolean (true/false) * `date` - Date * `datetime` - Date & time * `url` - URL * `json` - JSON * `select` - Selection * `multiselect` - Multiple selection * `object` - Object * `multiobject` - Multiple objects
.PARAMETER Label
No description available.
.OUTPUTS

CustomFieldType<PSCustomObject>
#>

function Initialize-CustomFieldType {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("text", "longtext", "integer", "decimal", "boolean", "date", "datetime", "url", "json", "select", "multiselect", "object", "multiobject")]
        [String]
        ${Value},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("Text", "Text (long)", "Integer", "Decimal", "Boolean (true/false)", "Date", "Date & time", "URL", "JSON", "Selection", "Multiple selection", "Object", "Multiple objects")]
        [String]
        ${Label}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => CustomFieldType' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "value" = ${Value}
            "label" = ${Label}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CustomFieldType<PSCustomObject>

.DESCRIPTION

Convert from JSON to CustomFieldType<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CustomFieldType<PSCustomObject>
#>
function ConvertFrom-JsonToCustomFieldType {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => CustomFieldType' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CustomFieldType
        $AllProperties = ("value", "label")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "value"))) { #optional property not found
            $Value = $null
        } else {
            $Value = $JsonParameters.PSobject.Properties["value"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "label"))) { #optional property not found
            $Label = $null
        } else {
            $Label = $JsonParameters.PSobject.Properties["label"].value
        }

        $PSO = [PSCustomObject]@{
            "value" = ${Value}
            "label" = ${Label}
        }

        return $PSO
    }

}

