#
# NetBox REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 3.7.8 (3.7)
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Value
* `type1-ieee802.3af` - 802.3af (Type 1) * `type2-ieee802.3at` - 802.3at (Type 2) * `type3-ieee802.3bt` - 802.3bt (Type 3) * `type4-ieee802.3bt` - 802.3bt (Type 4) * `passive-24v-2pair` - Passive 24V (2-pair) * `passive-24v-4pair` - Passive 24V (4-pair) * `passive-48v-2pair` - Passive 48V (2-pair) * `passive-48v-4pair` - Passive 48V (4-pair)
.PARAMETER Label
No description available.
.OUTPUTS

InterfaceTemplatePoeType<PSCustomObject>
#>

function Initialize-InterfaceTemplatePoeType {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("type1-ieee802.3af", "type2-ieee802.3at", "type3-ieee802.3bt", "type4-ieee802.3bt", "passive-24v-2pair", "passive-24v-4pair", "passive-48v-2pair", "passive-48v-4pair", "", "")]
        [String]
        ${Value},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("802.3af (Type 1)", "802.3at (Type 2)", "802.3bt (Type 3)", "802.3bt (Type 4)", "Passive 24V (2-pair)", "Passive 24V (4-pair)", "Passive 48V (2-pair)", "Passive 48V (4-pair)")]
        [String]
        ${Label}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => InterfaceTemplatePoeType' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "value" = ${Value}
            "label" = ${Label}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to InterfaceTemplatePoeType<PSCustomObject>

.DESCRIPTION

Convert from JSON to InterfaceTemplatePoeType<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

InterfaceTemplatePoeType<PSCustomObject>
#>
function ConvertFrom-JsonToInterfaceTemplatePoeType {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => InterfaceTemplatePoeType' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in InterfaceTemplatePoeType
        $AllProperties = ("value", "label")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "value"))) { #optional property not found
            $Value = $null
        } else {
            $Value = $JsonParameters.PSobject.Properties["value"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "label"))) { #optional property not found
            $Label = $null
        } else {
            $Label = $JsonParameters.PSobject.Properties["label"].value
        }

        $PSO = [PSCustomObject]@{
            "value" = ${Value}
            "label" = ${Label}
        }

        return $PSO
    }

}

