#
# NetBox REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 3.7.8 (3.7)
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)

.PARAMETER ObjectType
No description available.
.PARAMETER ObjectId
No description available.
.PARAMETER User
No description available.
.OUTPUTS

PatchedWritableBookmarkRequest<PSCustomObject>
#>

function Initialize-PatchedWritableBookmarkRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ObjectType},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${ObjectId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${User}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => PatchedWritableBookmarkRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($ObjectId -and $ObjectId -gt 9223372036854775807) {
          throw "invalid value for 'ObjectId', must be smaller than or equal to 9223372036854775807."
        }

        if ($ObjectId -and $ObjectId -lt 0) {
          throw "invalid value for 'ObjectId', must be greater than or equal to 0."
        }


        $PSO = [PSCustomObject]@{
            "object_type" = ${ObjectType}
            "object_id" = ${ObjectId}
            "user" = ${User}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PatchedWritableBookmarkRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to PatchedWritableBookmarkRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PatchedWritableBookmarkRequest<PSCustomObject>
#>
function ConvertFrom-JsonToPatchedWritableBookmarkRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => PatchedWritableBookmarkRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PatchedWritableBookmarkRequest
        $AllProperties = ("object_type", "object_id", "user")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "object_type"))) { #optional property not found
            $ObjectType = $null
        } else {
            $ObjectType = $JsonParameters.PSobject.Properties["object_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "object_id"))) { #optional property not found
            $ObjectId = $null
        } else {
            $ObjectId = $JsonParameters.PSobject.Properties["object_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "user"))) { #optional property not found
            $User = $null
        } else {
            $User = $JsonParameters.PSobject.Properties["user"].value
        }

        $PSO = [PSCustomObject]@{
            "object_type" = ${ObjectType}
            "object_id" = ${ObjectId}
            "user" = ${User}
        }

        return $PSO
    }

}

