#
# NetBox REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 3.7.8 (3.7)
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'UsersApi' {
    Context 'Use-rsConfigRetrieve' {
        It 'Test Use-rsConfigRetrieve' {
            #$TestResult = Use-rsConfigRetrieve
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsGroupsBulkDestroy' {
        It 'Test Use-rsGroupsBulkDestroy' {
            #$TestResult = Use-rsGroupsBulkDestroy -GroupRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsGroupsBulkPartialUpdate' {
        It 'Test Use-rsGroupsBulkPartialUpdate' {
            #$TestResult = Use-rsGroupsBulkPartialUpdate -GroupRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsGroupsBulkUpdate' {
        It 'Test Use-rsGroupsBulkUpdate' {
            #$TestResult = Use-rsGroupsBulkUpdate -GroupRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsGroupsCreate' {
        It 'Test Use-rsGroupsCreate' {
            #$TestResult = Use-rsGroupsCreate -GroupRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsGroupsDestroy' {
        It 'Test Use-rsGroupsDestroy' {
            #$TestResult = Use-rsGroupsDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsGroupsList' {
        It 'Test Use-rsGroupsList' {
            #$TestResult = Use-rsGroupsList -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -Limit "TEST_VALUE" -Name "TEST_VALUE" -NameEmpty "TEST_VALUE" -NameIc "TEST_VALUE" -NameIe "TEST_VALUE" -NameIew "TEST_VALUE" -NameIsw "TEST_VALUE" -NameN "TEST_VALUE" -NameNic "TEST_VALUE" -NameNie "TEST_VALUE" -NameNiew "TEST_VALUE" -NameNisw "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -Q "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsGroupsPartialUpdate' {
        It 'Test Use-rsGroupsPartialUpdate' {
            #$TestResult = Use-rsGroupsPartialUpdate -Id "TEST_VALUE" -PatchedGroupRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsGroupsRetrieve' {
        It 'Test Use-rsGroupsRetrieve' {
            #$TestResult = Use-rsGroupsRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsGroupsUpdate' {
        It 'Test Use-rsGroupsUpdate' {
            #$TestResult = Use-rsGroupsUpdate -Id "TEST_VALUE" -GroupRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsPermissionsBulkDestroy' {
        It 'Test Use-rsPermissionsBulkDestroy' {
            #$TestResult = Use-rsPermissionsBulkDestroy -ObjectPermissionRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsPermissionsBulkPartialUpdate' {
        It 'Test Use-rsPermissionsBulkPartialUpdate' {
            #$TestResult = Use-rsPermissionsBulkPartialUpdate -ObjectPermissionRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsPermissionsBulkUpdate' {
        It 'Test Use-rsPermissionsBulkUpdate' {
            #$TestResult = Use-rsPermissionsBulkUpdate -ObjectPermissionRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsPermissionsCreate' {
        It 'Test Use-rsPermissionsCreate' {
            #$TestResult = Use-rsPermissionsCreate -WritableObjectPermissionRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsPermissionsDestroy' {
        It 'Test Use-rsPermissionsDestroy' {
            #$TestResult = Use-rsPermissionsDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsPermissionsList' {
        It 'Test Use-rsPermissionsList' {
            #$TestResult = Use-rsPermissionsList -CanAdd "TEST_VALUE" -CanChange "TEST_VALUE" -CanDelete "TEST_VALUE" -CanView "TEST_VALUE" -Description "TEST_VALUE" -DescriptionEmpty "TEST_VALUE" -DescriptionIc "TEST_VALUE" -DescriptionIe "TEST_VALUE" -DescriptionIew "TEST_VALUE" -DescriptionIsw "TEST_VALUE" -DescriptionN "TEST_VALUE" -DescriptionNic "TEST_VALUE" -DescriptionNie "TEST_VALUE" -DescriptionNiew "TEST_VALUE" -DescriptionNisw "TEST_VALUE" -Enabled "TEST_VALUE" -Group "TEST_VALUE" -GroupN "TEST_VALUE" -GroupId "TEST_VALUE" -GroupIdN "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -Limit "TEST_VALUE" -Name "TEST_VALUE" -NameEmpty "TEST_VALUE" -NameIc "TEST_VALUE" -NameIe "TEST_VALUE" -NameIew "TEST_VALUE" -NameIsw "TEST_VALUE" -NameN "TEST_VALUE" -NameNic "TEST_VALUE" -NameNie "TEST_VALUE" -NameNiew "TEST_VALUE" -NameNisw "TEST_VALUE" -ObjectTypes "TEST_VALUE" -ObjectTypesN "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -Q "TEST_VALUE" -User "TEST_VALUE" -UserN "TEST_VALUE" -UserId "TEST_VALUE" -UserIdN "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsPermissionsPartialUpdate' {
        It 'Test Use-rsPermissionsPartialUpdate' {
            #$TestResult = Use-rsPermissionsPartialUpdate -Id "TEST_VALUE" -PatchedWritableObjectPermissionRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsPermissionsRetrieve' {
        It 'Test Use-rsPermissionsRetrieve' {
            #$TestResult = Use-rsPermissionsRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsPermissionsUpdate' {
        It 'Test Use-rsPermissionsUpdate' {
            #$TestResult = Use-rsPermissionsUpdate -Id "TEST_VALUE" -WritableObjectPermissionRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsTokensBulkDestroy' {
        It 'Test Use-rsTokensBulkDestroy' {
            #$TestResult = Use-rsTokensBulkDestroy -TokenRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsTokensBulkPartialUpdate' {
        It 'Test Use-rsTokensBulkPartialUpdate' {
            #$TestResult = Use-rsTokensBulkPartialUpdate -TokenRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsTokensBulkUpdate' {
        It 'Test Use-rsTokensBulkUpdate' {
            #$TestResult = Use-rsTokensBulkUpdate -TokenRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsTokensCreate' {
        It 'Test Use-rsTokensCreate' {
            #$TestResult = Use-rsTokensCreate -WritableTokenRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsTokensDestroy' {
        It 'Test Use-rsTokensDestroy' {
            #$TestResult = Use-rsTokensDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsTokensList' {
        It 'Test Use-rsTokensList' {
            #$TestResult = Use-rsTokensList -Created "TEST_VALUE" -CreatedGte "TEST_VALUE" -CreatedLte "TEST_VALUE" -Description "TEST_VALUE" -DescriptionEmpty "TEST_VALUE" -DescriptionIc "TEST_VALUE" -DescriptionIe "TEST_VALUE" -DescriptionIew "TEST_VALUE" -DescriptionIsw "TEST_VALUE" -DescriptionN "TEST_VALUE" -DescriptionNic "TEST_VALUE" -DescriptionNie "TEST_VALUE" -DescriptionNiew "TEST_VALUE" -DescriptionNisw "TEST_VALUE" -Expires "TEST_VALUE" -ExpiresGte "TEST_VALUE" -ExpiresLte "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -Key "TEST_VALUE" -KeyEmpty "TEST_VALUE" -KeyIc "TEST_VALUE" -KeyIe "TEST_VALUE" -KeyIew "TEST_VALUE" -KeyIsw "TEST_VALUE" -KeyN "TEST_VALUE" -KeyNic "TEST_VALUE" -KeyNie "TEST_VALUE" -KeyNiew "TEST_VALUE" -KeyNisw "TEST_VALUE" -Limit "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -Q "TEST_VALUE" -User "TEST_VALUE" -UserN "TEST_VALUE" -UserId "TEST_VALUE" -UserIdN "TEST_VALUE" -WriteEnabled "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsTokensPartialUpdate' {
        It 'Test Use-rsTokensPartialUpdate' {
            #$TestResult = Use-rsTokensPartialUpdate -Id "TEST_VALUE" -PatchedWritableTokenRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsTokensProvisionCreate' {
        It 'Test Use-rsTokensProvisionCreate' {
            #$TestResult = Use-rsTokensProvisionCreate -TokenProvisionRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsTokensRetrieve' {
        It 'Test Use-rsTokensRetrieve' {
            #$TestResult = Use-rsTokensRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsTokensUpdate' {
        It 'Test Use-rsTokensUpdate' {
            #$TestResult = Use-rsTokensUpdate -Id "TEST_VALUE" -WritableTokenRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsUsersBulkDestroy' {
        It 'Test Use-rsUsersBulkDestroy' {
            #$TestResult = Use-rsUsersBulkDestroy -UserRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsUsersBulkPartialUpdate' {
        It 'Test Use-rsUsersBulkPartialUpdate' {
            #$TestResult = Use-rsUsersBulkPartialUpdate -UserRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsUsersBulkUpdate' {
        It 'Test Use-rsUsersBulkUpdate' {
            #$TestResult = Use-rsUsersBulkUpdate -UserRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsUsersCreate' {
        It 'Test Use-rsUsersCreate' {
            #$TestResult = Use-rsUsersCreate -WritableUserRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsUsersDestroy' {
        It 'Test Use-rsUsersDestroy' {
            #$TestResult = Use-rsUsersDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsUsersList' {
        It 'Test Use-rsUsersList' {
            #$TestResult = Use-rsUsersList -Email "TEST_VALUE" -EmailEmpty "TEST_VALUE" -EmailIc "TEST_VALUE" -EmailIe "TEST_VALUE" -EmailIew "TEST_VALUE" -EmailIsw "TEST_VALUE" -EmailN "TEST_VALUE" -EmailNic "TEST_VALUE" -EmailNie "TEST_VALUE" -EmailNiew "TEST_VALUE" -EmailNisw "TEST_VALUE" -FirstName "TEST_VALUE" -FirstNameEmpty "TEST_VALUE" -FirstNameIc "TEST_VALUE" -FirstNameIe "TEST_VALUE" -FirstNameIew "TEST_VALUE" -FirstNameIsw "TEST_VALUE" -FirstNameN "TEST_VALUE" -FirstNameNic "TEST_VALUE" -FirstNameNie "TEST_VALUE" -FirstNameNiew "TEST_VALUE" -FirstNameNisw "TEST_VALUE" -Group "TEST_VALUE" -GroupN "TEST_VALUE" -GroupId "TEST_VALUE" -GroupIdN "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -IsActive "TEST_VALUE" -IsStaff "TEST_VALUE" -IsSuperuser "TEST_VALUE" -LastName "TEST_VALUE" -LastNameEmpty "TEST_VALUE" -LastNameIc "TEST_VALUE" -LastNameIe "TEST_VALUE" -LastNameIew "TEST_VALUE" -LastNameIsw "TEST_VALUE" -LastNameN "TEST_VALUE" -LastNameNic "TEST_VALUE" -LastNameNie "TEST_VALUE" -LastNameNiew "TEST_VALUE" -LastNameNisw "TEST_VALUE" -Limit "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -Q "TEST_VALUE" -Username "TEST_VALUE" -UsernameEmpty "TEST_VALUE" -UsernameIc "TEST_VALUE" -UsernameIe "TEST_VALUE" -UsernameIew "TEST_VALUE" -UsernameIsw "TEST_VALUE" -UsernameN "TEST_VALUE" -UsernameNic "TEST_VALUE" -UsernameNie "TEST_VALUE" -UsernameNiew "TEST_VALUE" -UsernameNisw "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsUsersPartialUpdate' {
        It 'Test Use-rsUsersPartialUpdate' {
            #$TestResult = Use-rsUsersPartialUpdate -Id "TEST_VALUE" -PatchedWritableUserRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsUsersRetrieve' {
        It 'Test Use-rsUsersRetrieve' {
            #$TestResult = Use-rsUsersRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Use-rsUsersUpdate' {
        It 'Test Use-rsUsersUpdate' {
            #$TestResult = Use-rsUsersUpdate -Id "TEST_VALUE" -WritableUserRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
