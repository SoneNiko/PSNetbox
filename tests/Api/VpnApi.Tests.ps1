#
# NetBox REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 3.7.8 (3.7)
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'VpnApi' {
    Context 'Invoke-VpnIkePoliciesBulkDestroy' {
        It 'Test Invoke-VpnIkePoliciesBulkDestroy' {
            #$TestResult = Invoke-VpnIkePoliciesBulkDestroy -IKEPolicyRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkePoliciesBulkPartialUpdate' {
        It 'Test Invoke-VpnIkePoliciesBulkPartialUpdate' {
            #$TestResult = Invoke-VpnIkePoliciesBulkPartialUpdate -IKEPolicyRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkePoliciesBulkUpdate' {
        It 'Test Invoke-VpnIkePoliciesBulkUpdate' {
            #$TestResult = Invoke-VpnIkePoliciesBulkUpdate -IKEPolicyRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkePoliciesCreate' {
        It 'Test Invoke-VpnIkePoliciesCreate' {
            #$TestResult = Invoke-VpnIkePoliciesCreate -WritableIKEPolicyRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkePoliciesDestroy' {
        It 'Test Invoke-VpnIkePoliciesDestroy' {
            #$TestResult = Invoke-VpnIkePoliciesDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkePoliciesList' {
        It 'Test Invoke-VpnIkePoliciesList' {
            #$TestResult = Invoke-VpnIkePoliciesList -Created "TEST_VALUE" -CreatedEmpty "TEST_VALUE" -CreatedGt "TEST_VALUE" -CreatedGte "TEST_VALUE" -CreatedLt "TEST_VALUE" -CreatedLte "TEST_VALUE" -CreatedN "TEST_VALUE" -CreatedByRequest "TEST_VALUE" -Description "TEST_VALUE" -DescriptionEmpty "TEST_VALUE" -DescriptionIc "TEST_VALUE" -DescriptionIe "TEST_VALUE" -DescriptionIew "TEST_VALUE" -DescriptionIsw "TEST_VALUE" -DescriptionN "TEST_VALUE" -DescriptionNic "TEST_VALUE" -DescriptionNie "TEST_VALUE" -DescriptionNiew "TEST_VALUE" -DescriptionNisw "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -LastUpdated "TEST_VALUE" -LastUpdatedEmpty "TEST_VALUE" -LastUpdatedGt "TEST_VALUE" -LastUpdatedGte "TEST_VALUE" -LastUpdatedLt "TEST_VALUE" -LastUpdatedLte "TEST_VALUE" -LastUpdatedN "TEST_VALUE" -Limit "TEST_VALUE" -Mode "TEST_VALUE" -ModeN "TEST_VALUE" -ModifiedByRequest "TEST_VALUE" -Name "TEST_VALUE" -NameEmpty "TEST_VALUE" -NameIc "TEST_VALUE" -NameIe "TEST_VALUE" -NameIew "TEST_VALUE" -NameIsw "TEST_VALUE" -NameN "TEST_VALUE" -NameNic "TEST_VALUE" -NameNie "TEST_VALUE" -NameNiew "TEST_VALUE" -NameNisw "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -PresharedKey "TEST_VALUE" -PresharedKeyIc "TEST_VALUE" -PresharedKeyIe "TEST_VALUE" -PresharedKeyIew "TEST_VALUE" -PresharedKeyIsw "TEST_VALUE" -PresharedKeyN "TEST_VALUE" -PresharedKeyNic "TEST_VALUE" -PresharedKeyNie "TEST_VALUE" -PresharedKeyNiew "TEST_VALUE" -PresharedKeyNisw "TEST_VALUE" -Proposal "TEST_VALUE" -ProposalEmpty "TEST_VALUE" -ProposalIc "TEST_VALUE" -ProposalIe "TEST_VALUE" -ProposalIew "TEST_VALUE" -ProposalIsw "TEST_VALUE" -ProposalN "TEST_VALUE" -ProposalNic "TEST_VALUE" -ProposalNie "TEST_VALUE" -ProposalNiew "TEST_VALUE" -ProposalNisw "TEST_VALUE" -ProposalId "TEST_VALUE" -ProposalIdEmpty "TEST_VALUE" -ProposalIdGt "TEST_VALUE" -ProposalIdGte "TEST_VALUE" -ProposalIdLt "TEST_VALUE" -ProposalIdLte "TEST_VALUE" -ProposalIdN "TEST_VALUE" -Q "TEST_VALUE" -Tag "TEST_VALUE" -TagN "TEST_VALUE" -UpdatedByRequest "TEST_VALUE" -Version "TEST_VALUE" -VersionN "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkePoliciesPartialUpdate' {
        It 'Test Invoke-VpnIkePoliciesPartialUpdate' {
            #$TestResult = Invoke-VpnIkePoliciesPartialUpdate -Id "TEST_VALUE" -PatchedWritableIKEPolicyRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkePoliciesRetrieve' {
        It 'Test Invoke-VpnIkePoliciesRetrieve' {
            #$TestResult = Invoke-VpnIkePoliciesRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkePoliciesUpdate' {
        It 'Test Invoke-VpnIkePoliciesUpdate' {
            #$TestResult = Invoke-VpnIkePoliciesUpdate -Id "TEST_VALUE" -WritableIKEPolicyRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkeProposalsBulkDestroy' {
        It 'Test Invoke-VpnIkeProposalsBulkDestroy' {
            #$TestResult = Invoke-VpnIkeProposalsBulkDestroy -IKEProposalRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkeProposalsBulkPartialUpdate' {
        It 'Test Invoke-VpnIkeProposalsBulkPartialUpdate' {
            #$TestResult = Invoke-VpnIkeProposalsBulkPartialUpdate -IKEProposalRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkeProposalsBulkUpdate' {
        It 'Test Invoke-VpnIkeProposalsBulkUpdate' {
            #$TestResult = Invoke-VpnIkeProposalsBulkUpdate -IKEProposalRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkeProposalsCreate' {
        It 'Test Invoke-VpnIkeProposalsCreate' {
            #$TestResult = Invoke-VpnIkeProposalsCreate -WritableIKEProposalRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkeProposalsDestroy' {
        It 'Test Invoke-VpnIkeProposalsDestroy' {
            #$TestResult = Invoke-VpnIkeProposalsDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkeProposalsList' {
        It 'Test Invoke-VpnIkeProposalsList' {
            #$TestResult = Invoke-VpnIkeProposalsList -AuthenticationAlgorithm "TEST_VALUE" -AuthenticationAlgorithmN "TEST_VALUE" -AuthenticationMethod "TEST_VALUE" -AuthenticationMethodN "TEST_VALUE" -Created "TEST_VALUE" -CreatedEmpty "TEST_VALUE" -CreatedGt "TEST_VALUE" -CreatedGte "TEST_VALUE" -CreatedLt "TEST_VALUE" -CreatedLte "TEST_VALUE" -CreatedN "TEST_VALUE" -CreatedByRequest "TEST_VALUE" -Description "TEST_VALUE" -DescriptionEmpty "TEST_VALUE" -DescriptionIc "TEST_VALUE" -DescriptionIe "TEST_VALUE" -DescriptionIew "TEST_VALUE" -DescriptionIsw "TEST_VALUE" -DescriptionN "TEST_VALUE" -DescriptionNic "TEST_VALUE" -DescriptionNie "TEST_VALUE" -DescriptionNiew "TEST_VALUE" -DescriptionNisw "TEST_VALUE" -EncryptionAlgorithm "TEST_VALUE" -EncryptionAlgorithmN "TEST_VALUE" -Group "TEST_VALUE" -GroupN "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -IkePolicy "TEST_VALUE" -IkePolicyN "TEST_VALUE" -IkePolicyId "TEST_VALUE" -IkePolicyIdN "TEST_VALUE" -LastUpdated "TEST_VALUE" -LastUpdatedEmpty "TEST_VALUE" -LastUpdatedGt "TEST_VALUE" -LastUpdatedGte "TEST_VALUE" -LastUpdatedLt "TEST_VALUE" -LastUpdatedLte "TEST_VALUE" -LastUpdatedN "TEST_VALUE" -Limit "TEST_VALUE" -ModifiedByRequest "TEST_VALUE" -Name "TEST_VALUE" -NameEmpty "TEST_VALUE" -NameIc "TEST_VALUE" -NameIe "TEST_VALUE" -NameIew "TEST_VALUE" -NameIsw "TEST_VALUE" -NameN "TEST_VALUE" -NameNic "TEST_VALUE" -NameNie "TEST_VALUE" -NameNiew "TEST_VALUE" -NameNisw "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -Q "TEST_VALUE" -SaLifetime "TEST_VALUE" -SaLifetimeEmpty "TEST_VALUE" -SaLifetimeGt "TEST_VALUE" -SaLifetimeGte "TEST_VALUE" -SaLifetimeLt "TEST_VALUE" -SaLifetimeLte "TEST_VALUE" -SaLifetimeN "TEST_VALUE" -Tag "TEST_VALUE" -TagN "TEST_VALUE" -UpdatedByRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkeProposalsPartialUpdate' {
        It 'Test Invoke-VpnIkeProposalsPartialUpdate' {
            #$TestResult = Invoke-VpnIkeProposalsPartialUpdate -Id "TEST_VALUE" -PatchedWritableIKEProposalRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkeProposalsRetrieve' {
        It 'Test Invoke-VpnIkeProposalsRetrieve' {
            #$TestResult = Invoke-VpnIkeProposalsRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIkeProposalsUpdate' {
        It 'Test Invoke-VpnIkeProposalsUpdate' {
            #$TestResult = Invoke-VpnIkeProposalsUpdate -Id "TEST_VALUE" -WritableIKEProposalRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecPoliciesBulkDestroy' {
        It 'Test Invoke-VpnIpsecPoliciesBulkDestroy' {
            #$TestResult = Invoke-VpnIpsecPoliciesBulkDestroy -IPSecPolicyRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecPoliciesBulkPartialUpdate' {
        It 'Test Invoke-VpnIpsecPoliciesBulkPartialUpdate' {
            #$TestResult = Invoke-VpnIpsecPoliciesBulkPartialUpdate -IPSecPolicyRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecPoliciesBulkUpdate' {
        It 'Test Invoke-VpnIpsecPoliciesBulkUpdate' {
            #$TestResult = Invoke-VpnIpsecPoliciesBulkUpdate -IPSecPolicyRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecPoliciesCreate' {
        It 'Test Invoke-VpnIpsecPoliciesCreate' {
            #$TestResult = Invoke-VpnIpsecPoliciesCreate -WritableIPSecPolicyRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecPoliciesDestroy' {
        It 'Test Invoke-VpnIpsecPoliciesDestroy' {
            #$TestResult = Invoke-VpnIpsecPoliciesDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecPoliciesList' {
        It 'Test Invoke-VpnIpsecPoliciesList' {
            #$TestResult = Invoke-VpnIpsecPoliciesList -Created "TEST_VALUE" -CreatedEmpty "TEST_VALUE" -CreatedGt "TEST_VALUE" -CreatedGte "TEST_VALUE" -CreatedLt "TEST_VALUE" -CreatedLte "TEST_VALUE" -CreatedN "TEST_VALUE" -CreatedByRequest "TEST_VALUE" -Description "TEST_VALUE" -DescriptionEmpty "TEST_VALUE" -DescriptionIc "TEST_VALUE" -DescriptionIe "TEST_VALUE" -DescriptionIew "TEST_VALUE" -DescriptionIsw "TEST_VALUE" -DescriptionN "TEST_VALUE" -DescriptionNic "TEST_VALUE" -DescriptionNie "TEST_VALUE" -DescriptionNiew "TEST_VALUE" -DescriptionNisw "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -LastUpdated "TEST_VALUE" -LastUpdatedEmpty "TEST_VALUE" -LastUpdatedGt "TEST_VALUE" -LastUpdatedGte "TEST_VALUE" -LastUpdatedLt "TEST_VALUE" -LastUpdatedLte "TEST_VALUE" -LastUpdatedN "TEST_VALUE" -Limit "TEST_VALUE" -ModifiedByRequest "TEST_VALUE" -Name "TEST_VALUE" -NameEmpty "TEST_VALUE" -NameIc "TEST_VALUE" -NameIe "TEST_VALUE" -NameIew "TEST_VALUE" -NameIsw "TEST_VALUE" -NameN "TEST_VALUE" -NameNic "TEST_VALUE" -NameNie "TEST_VALUE" -NameNiew "TEST_VALUE" -NameNisw "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -PfsGroup "TEST_VALUE" -PfsGroupN "TEST_VALUE" -Proposal "TEST_VALUE" -ProposalEmpty "TEST_VALUE" -ProposalIc "TEST_VALUE" -ProposalIe "TEST_VALUE" -ProposalIew "TEST_VALUE" -ProposalIsw "TEST_VALUE" -ProposalN "TEST_VALUE" -ProposalNic "TEST_VALUE" -ProposalNie "TEST_VALUE" -ProposalNiew "TEST_VALUE" -ProposalNisw "TEST_VALUE" -ProposalId "TEST_VALUE" -ProposalIdEmpty "TEST_VALUE" -ProposalIdGt "TEST_VALUE" -ProposalIdGte "TEST_VALUE" -ProposalIdLt "TEST_VALUE" -ProposalIdLte "TEST_VALUE" -ProposalIdN "TEST_VALUE" -Q "TEST_VALUE" -Tag "TEST_VALUE" -TagN "TEST_VALUE" -UpdatedByRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecPoliciesPartialUpdate' {
        It 'Test Invoke-VpnIpsecPoliciesPartialUpdate' {
            #$TestResult = Invoke-VpnIpsecPoliciesPartialUpdate -Id "TEST_VALUE" -PatchedWritableIPSecPolicyRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecPoliciesRetrieve' {
        It 'Test Invoke-VpnIpsecPoliciesRetrieve' {
            #$TestResult = Invoke-VpnIpsecPoliciesRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecPoliciesUpdate' {
        It 'Test Invoke-VpnIpsecPoliciesUpdate' {
            #$TestResult = Invoke-VpnIpsecPoliciesUpdate -Id "TEST_VALUE" -WritableIPSecPolicyRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProfilesBulkDestroy' {
        It 'Test Invoke-VpnIpsecProfilesBulkDestroy' {
            #$TestResult = Invoke-VpnIpsecProfilesBulkDestroy -IPSecProfileRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProfilesBulkPartialUpdate' {
        It 'Test Invoke-VpnIpsecProfilesBulkPartialUpdate' {
            #$TestResult = Invoke-VpnIpsecProfilesBulkPartialUpdate -IPSecProfileRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProfilesBulkUpdate' {
        It 'Test Invoke-VpnIpsecProfilesBulkUpdate' {
            #$TestResult = Invoke-VpnIpsecProfilesBulkUpdate -IPSecProfileRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProfilesCreate' {
        It 'Test Invoke-VpnIpsecProfilesCreate' {
            #$TestResult = Invoke-VpnIpsecProfilesCreate -WritableIPSecProfileRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProfilesDestroy' {
        It 'Test Invoke-VpnIpsecProfilesDestroy' {
            #$TestResult = Invoke-VpnIpsecProfilesDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProfilesList' {
        It 'Test Invoke-VpnIpsecProfilesList' {
            #$TestResult = Invoke-VpnIpsecProfilesList -Created "TEST_VALUE" -CreatedEmpty "TEST_VALUE" -CreatedGt "TEST_VALUE" -CreatedGte "TEST_VALUE" -CreatedLt "TEST_VALUE" -CreatedLte "TEST_VALUE" -CreatedN "TEST_VALUE" -CreatedByRequest "TEST_VALUE" -Description "TEST_VALUE" -DescriptionEmpty "TEST_VALUE" -DescriptionIc "TEST_VALUE" -DescriptionIe "TEST_VALUE" -DescriptionIew "TEST_VALUE" -DescriptionIsw "TEST_VALUE" -DescriptionN "TEST_VALUE" -DescriptionNic "TEST_VALUE" -DescriptionNie "TEST_VALUE" -DescriptionNiew "TEST_VALUE" -DescriptionNisw "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -IkePolicy "TEST_VALUE" -IkePolicyN "TEST_VALUE" -IkePolicyId "TEST_VALUE" -IkePolicyIdN "TEST_VALUE" -IpsecPolicy "TEST_VALUE" -IpsecPolicyN "TEST_VALUE" -IpsecPolicyId "TEST_VALUE" -IpsecPolicyIdN "TEST_VALUE" -LastUpdated "TEST_VALUE" -LastUpdatedEmpty "TEST_VALUE" -LastUpdatedGt "TEST_VALUE" -LastUpdatedGte "TEST_VALUE" -LastUpdatedLt "TEST_VALUE" -LastUpdatedLte "TEST_VALUE" -LastUpdatedN "TEST_VALUE" -Limit "TEST_VALUE" -Mode "TEST_VALUE" -ModeN "TEST_VALUE" -ModifiedByRequest "TEST_VALUE" -Name "TEST_VALUE" -NameEmpty "TEST_VALUE" -NameIc "TEST_VALUE" -NameIe "TEST_VALUE" -NameIew "TEST_VALUE" -NameIsw "TEST_VALUE" -NameN "TEST_VALUE" -NameNic "TEST_VALUE" -NameNie "TEST_VALUE" -NameNiew "TEST_VALUE" -NameNisw "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -Q "TEST_VALUE" -Tag "TEST_VALUE" -TagN "TEST_VALUE" -UpdatedByRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProfilesPartialUpdate' {
        It 'Test Invoke-VpnIpsecProfilesPartialUpdate' {
            #$TestResult = Invoke-VpnIpsecProfilesPartialUpdate -Id "TEST_VALUE" -PatchedWritableIPSecProfileRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProfilesRetrieve' {
        It 'Test Invoke-VpnIpsecProfilesRetrieve' {
            #$TestResult = Invoke-VpnIpsecProfilesRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProfilesUpdate' {
        It 'Test Invoke-VpnIpsecProfilesUpdate' {
            #$TestResult = Invoke-VpnIpsecProfilesUpdate -Id "TEST_VALUE" -WritableIPSecProfileRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProposalsBulkDestroy' {
        It 'Test Invoke-VpnIpsecProposalsBulkDestroy' {
            #$TestResult = Invoke-VpnIpsecProposalsBulkDestroy -IPSecProposalRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProposalsBulkPartialUpdate' {
        It 'Test Invoke-VpnIpsecProposalsBulkPartialUpdate' {
            #$TestResult = Invoke-VpnIpsecProposalsBulkPartialUpdate -IPSecProposalRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProposalsBulkUpdate' {
        It 'Test Invoke-VpnIpsecProposalsBulkUpdate' {
            #$TestResult = Invoke-VpnIpsecProposalsBulkUpdate -IPSecProposalRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProposalsCreate' {
        It 'Test Invoke-VpnIpsecProposalsCreate' {
            #$TestResult = Invoke-VpnIpsecProposalsCreate -WritableIPSecProposalRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProposalsDestroy' {
        It 'Test Invoke-VpnIpsecProposalsDestroy' {
            #$TestResult = Invoke-VpnIpsecProposalsDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProposalsList' {
        It 'Test Invoke-VpnIpsecProposalsList' {
            #$TestResult = Invoke-VpnIpsecProposalsList -AuthenticationAlgorithm "TEST_VALUE" -AuthenticationAlgorithmN "TEST_VALUE" -Created "TEST_VALUE" -CreatedEmpty "TEST_VALUE" -CreatedGt "TEST_VALUE" -CreatedGte "TEST_VALUE" -CreatedLt "TEST_VALUE" -CreatedLte "TEST_VALUE" -CreatedN "TEST_VALUE" -CreatedByRequest "TEST_VALUE" -Description "TEST_VALUE" -DescriptionEmpty "TEST_VALUE" -DescriptionIc "TEST_VALUE" -DescriptionIe "TEST_VALUE" -DescriptionIew "TEST_VALUE" -DescriptionIsw "TEST_VALUE" -DescriptionN "TEST_VALUE" -DescriptionNic "TEST_VALUE" -DescriptionNie "TEST_VALUE" -DescriptionNiew "TEST_VALUE" -DescriptionNisw "TEST_VALUE" -EncryptionAlgorithm "TEST_VALUE" -EncryptionAlgorithmN "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -LastUpdated "TEST_VALUE" -LastUpdatedEmpty "TEST_VALUE" -LastUpdatedGt "TEST_VALUE" -LastUpdatedGte "TEST_VALUE" -LastUpdatedLt "TEST_VALUE" -LastUpdatedLte "TEST_VALUE" -LastUpdatedN "TEST_VALUE" -Limit "TEST_VALUE" -ModifiedByRequest "TEST_VALUE" -Name "TEST_VALUE" -NameEmpty "TEST_VALUE" -NameIc "TEST_VALUE" -NameIe "TEST_VALUE" -NameIew "TEST_VALUE" -NameIsw "TEST_VALUE" -NameN "TEST_VALUE" -NameNic "TEST_VALUE" -NameNie "TEST_VALUE" -NameNiew "TEST_VALUE" -NameNisw "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -Q "TEST_VALUE" -SaLifetimeData "TEST_VALUE" -SaLifetimeDataEmpty "TEST_VALUE" -SaLifetimeDataGt "TEST_VALUE" -SaLifetimeDataGte "TEST_VALUE" -SaLifetimeDataLt "TEST_VALUE" -SaLifetimeDataLte "TEST_VALUE" -SaLifetimeDataN "TEST_VALUE" -SaLifetimeSeconds "TEST_VALUE" -SaLifetimeSecondsEmpty "TEST_VALUE" -SaLifetimeSecondsGt "TEST_VALUE" -SaLifetimeSecondsGte "TEST_VALUE" -SaLifetimeSecondsLt "TEST_VALUE" -SaLifetimeSecondsLte "TEST_VALUE" -SaLifetimeSecondsN "TEST_VALUE" -Tag "TEST_VALUE" -TagN "TEST_VALUE" -UpdatedByRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProposalsPartialUpdate' {
        It 'Test Invoke-VpnIpsecProposalsPartialUpdate' {
            #$TestResult = Invoke-VpnIpsecProposalsPartialUpdate -Id "TEST_VALUE" -PatchedWritableIPSecProposalRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProposalsRetrieve' {
        It 'Test Invoke-VpnIpsecProposalsRetrieve' {
            #$TestResult = Invoke-VpnIpsecProposalsRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnIpsecProposalsUpdate' {
        It 'Test Invoke-VpnIpsecProposalsUpdate' {
            #$TestResult = Invoke-VpnIpsecProposalsUpdate -Id "TEST_VALUE" -WritableIPSecProposalRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnTerminationsBulkDestroy' {
        It 'Test Invoke-VpnL2vpnTerminationsBulkDestroy' {
            #$TestResult = Invoke-VpnL2vpnTerminationsBulkDestroy -L2VPNTerminationRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnTerminationsBulkPartialUpdate' {
        It 'Test Invoke-VpnL2vpnTerminationsBulkPartialUpdate' {
            #$TestResult = Invoke-VpnL2vpnTerminationsBulkPartialUpdate -L2VPNTerminationRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnTerminationsBulkUpdate' {
        It 'Test Invoke-VpnL2vpnTerminationsBulkUpdate' {
            #$TestResult = Invoke-VpnL2vpnTerminationsBulkUpdate -L2VPNTerminationRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnTerminationsCreate' {
        It 'Test Invoke-VpnL2vpnTerminationsCreate' {
            #$TestResult = Invoke-VpnL2vpnTerminationsCreate -WritableL2VPNTerminationRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnTerminationsDestroy' {
        It 'Test Invoke-VpnL2vpnTerminationsDestroy' {
            #$TestResult = Invoke-VpnL2vpnTerminationsDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnTerminationsList' {
        It 'Test Invoke-VpnL2vpnTerminationsList' {
            #$TestResult = Invoke-VpnL2vpnTerminationsList -AssignedObjectType "TEST_VALUE" -AssignedObjectTypeN "TEST_VALUE" -AssignedObjectTypeId "TEST_VALUE" -AssignedObjectTypeIdN "TEST_VALUE" -Created "TEST_VALUE" -CreatedEmpty "TEST_VALUE" -CreatedGt "TEST_VALUE" -CreatedGte "TEST_VALUE" -CreatedLt "TEST_VALUE" -CreatedLte "TEST_VALUE" -CreatedN "TEST_VALUE" -CreatedByRequest "TEST_VALUE" -Device "TEST_VALUE" -DeviceN "TEST_VALUE" -DeviceId "TEST_VALUE" -DeviceIdN "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -Interface "TEST_VALUE" -InterfaceN "TEST_VALUE" -InterfaceId "TEST_VALUE" -InterfaceIdN "TEST_VALUE" -L2vpn "TEST_VALUE" -L2vpnN "TEST_VALUE" -L2vpnId "TEST_VALUE" -L2vpnIdN "TEST_VALUE" -LastUpdated "TEST_VALUE" -LastUpdatedEmpty "TEST_VALUE" -LastUpdatedGt "TEST_VALUE" -LastUpdatedGte "TEST_VALUE" -LastUpdatedLt "TEST_VALUE" -LastUpdatedLte "TEST_VALUE" -LastUpdatedN "TEST_VALUE" -Limit "TEST_VALUE" -ModifiedByRequest "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -Q "TEST_VALUE" -Region "TEST_VALUE" -RegionId "TEST_VALUE" -Site "TEST_VALUE" -SiteId "TEST_VALUE" -Tag "TEST_VALUE" -TagN "TEST_VALUE" -UpdatedByRequest "TEST_VALUE" -VirtualMachine "TEST_VALUE" -VirtualMachineN "TEST_VALUE" -VirtualMachineId "TEST_VALUE" -VirtualMachineIdN "TEST_VALUE" -Vlan "TEST_VALUE" -VlanN "TEST_VALUE" -VlanId "TEST_VALUE" -VlanIdN "TEST_VALUE" -VlanVid "TEST_VALUE" -VlanVidEmpty "TEST_VALUE" -VlanVidGt "TEST_VALUE" -VlanVidGte "TEST_VALUE" -VlanVidLt "TEST_VALUE" -VlanVidLte "TEST_VALUE" -VlanVidN "TEST_VALUE" -Vminterface "TEST_VALUE" -VminterfaceN "TEST_VALUE" -VminterfaceId "TEST_VALUE" -VminterfaceIdN "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnTerminationsPartialUpdate' {
        It 'Test Invoke-VpnL2vpnTerminationsPartialUpdate' {
            #$TestResult = Invoke-VpnL2vpnTerminationsPartialUpdate -Id "TEST_VALUE" -PatchedWritableL2VPNTerminationRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnTerminationsRetrieve' {
        It 'Test Invoke-VpnL2vpnTerminationsRetrieve' {
            #$TestResult = Invoke-VpnL2vpnTerminationsRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnTerminationsUpdate' {
        It 'Test Invoke-VpnL2vpnTerminationsUpdate' {
            #$TestResult = Invoke-VpnL2vpnTerminationsUpdate -Id "TEST_VALUE" -WritableL2VPNTerminationRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnsBulkDestroy' {
        It 'Test Invoke-VpnL2vpnsBulkDestroy' {
            #$TestResult = Invoke-VpnL2vpnsBulkDestroy -L2VPNRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnsBulkPartialUpdate' {
        It 'Test Invoke-VpnL2vpnsBulkPartialUpdate' {
            #$TestResult = Invoke-VpnL2vpnsBulkPartialUpdate -L2VPNRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnsBulkUpdate' {
        It 'Test Invoke-VpnL2vpnsBulkUpdate' {
            #$TestResult = Invoke-VpnL2vpnsBulkUpdate -L2VPNRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnsCreate' {
        It 'Test Invoke-VpnL2vpnsCreate' {
            #$TestResult = Invoke-VpnL2vpnsCreate -WritableL2VPNRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnsDestroy' {
        It 'Test Invoke-VpnL2vpnsDestroy' {
            #$TestResult = Invoke-VpnL2vpnsDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnsList' {
        It 'Test Invoke-VpnL2vpnsList' {
            #$TestResult = Invoke-VpnL2vpnsList -Created "TEST_VALUE" -CreatedEmpty "TEST_VALUE" -CreatedGt "TEST_VALUE" -CreatedGte "TEST_VALUE" -CreatedLt "TEST_VALUE" -CreatedLte "TEST_VALUE" -CreatedN "TEST_VALUE" -CreatedByRequest "TEST_VALUE" -Description "TEST_VALUE" -DescriptionEmpty "TEST_VALUE" -DescriptionIc "TEST_VALUE" -DescriptionIe "TEST_VALUE" -DescriptionIew "TEST_VALUE" -DescriptionIsw "TEST_VALUE" -DescriptionN "TEST_VALUE" -DescriptionNic "TEST_VALUE" -DescriptionNie "TEST_VALUE" -DescriptionNiew "TEST_VALUE" -DescriptionNisw "TEST_VALUE" -ExportTarget "TEST_VALUE" -ExportTargetN "TEST_VALUE" -ExportTargetId "TEST_VALUE" -ExportTargetIdN "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -Identifier "TEST_VALUE" -IdentifierEmpty "TEST_VALUE" -IdentifierGt "TEST_VALUE" -IdentifierGte "TEST_VALUE" -IdentifierLt "TEST_VALUE" -IdentifierLte "TEST_VALUE" -IdentifierN "TEST_VALUE" -ImportTarget "TEST_VALUE" -ImportTargetN "TEST_VALUE" -ImportTargetId "TEST_VALUE" -ImportTargetIdN "TEST_VALUE" -LastUpdated "TEST_VALUE" -LastUpdatedEmpty "TEST_VALUE" -LastUpdatedGt "TEST_VALUE" -LastUpdatedGte "TEST_VALUE" -LastUpdatedLt "TEST_VALUE" -LastUpdatedLte "TEST_VALUE" -LastUpdatedN "TEST_VALUE" -Limit "TEST_VALUE" -ModifiedByRequest "TEST_VALUE" -Name "TEST_VALUE" -NameEmpty "TEST_VALUE" -NameIc "TEST_VALUE" -NameIe "TEST_VALUE" -NameIew "TEST_VALUE" -NameIsw "TEST_VALUE" -NameN "TEST_VALUE" -NameNic "TEST_VALUE" -NameNie "TEST_VALUE" -NameNiew "TEST_VALUE" -NameNisw "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -Q "TEST_VALUE" -Slug "TEST_VALUE" -SlugEmpty "TEST_VALUE" -SlugIc "TEST_VALUE" -SlugIe "TEST_VALUE" -SlugIew "TEST_VALUE" -SlugIsw "TEST_VALUE" -SlugN "TEST_VALUE" -SlugNic "TEST_VALUE" -SlugNie "TEST_VALUE" -SlugNiew "TEST_VALUE" -SlugNisw "TEST_VALUE" -Tag "TEST_VALUE" -TagN "TEST_VALUE" -Tenant "TEST_VALUE" -TenantN "TEST_VALUE" -TenantGroup "TEST_VALUE" -TenantGroupN "TEST_VALUE" -TenantGroupId "TEST_VALUE" -TenantGroupIdN "TEST_VALUE" -TenantId "TEST_VALUE" -TenantIdN "TEST_VALUE" -Type "TEST_VALUE" -TypeN "TEST_VALUE" -UpdatedByRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnsPartialUpdate' {
        It 'Test Invoke-VpnL2vpnsPartialUpdate' {
            #$TestResult = Invoke-VpnL2vpnsPartialUpdate -Id "TEST_VALUE" -PatchedWritableL2VPNRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnsRetrieve' {
        It 'Test Invoke-VpnL2vpnsRetrieve' {
            #$TestResult = Invoke-VpnL2vpnsRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnL2vpnsUpdate' {
        It 'Test Invoke-VpnL2vpnsUpdate' {
            #$TestResult = Invoke-VpnL2vpnsUpdate -Id "TEST_VALUE" -WritableL2VPNRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelGroupsBulkDestroy' {
        It 'Test Invoke-VpnTunnelGroupsBulkDestroy' {
            #$TestResult = Invoke-VpnTunnelGroupsBulkDestroy -TunnelGroupRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelGroupsBulkPartialUpdate' {
        It 'Test Invoke-VpnTunnelGroupsBulkPartialUpdate' {
            #$TestResult = Invoke-VpnTunnelGroupsBulkPartialUpdate -TunnelGroupRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelGroupsBulkUpdate' {
        It 'Test Invoke-VpnTunnelGroupsBulkUpdate' {
            #$TestResult = Invoke-VpnTunnelGroupsBulkUpdate -TunnelGroupRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelGroupsCreate' {
        It 'Test Invoke-VpnTunnelGroupsCreate' {
            #$TestResult = Invoke-VpnTunnelGroupsCreate -TunnelGroupRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelGroupsDestroy' {
        It 'Test Invoke-VpnTunnelGroupsDestroy' {
            #$TestResult = Invoke-VpnTunnelGroupsDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelGroupsList' {
        It 'Test Invoke-VpnTunnelGroupsList' {
            #$TestResult = Invoke-VpnTunnelGroupsList -Created "TEST_VALUE" -CreatedEmpty "TEST_VALUE" -CreatedGt "TEST_VALUE" -CreatedGte "TEST_VALUE" -CreatedLt "TEST_VALUE" -CreatedLte "TEST_VALUE" -CreatedN "TEST_VALUE" -CreatedByRequest "TEST_VALUE" -Description "TEST_VALUE" -DescriptionEmpty "TEST_VALUE" -DescriptionIc "TEST_VALUE" -DescriptionIe "TEST_VALUE" -DescriptionIew "TEST_VALUE" -DescriptionIsw "TEST_VALUE" -DescriptionN "TEST_VALUE" -DescriptionNic "TEST_VALUE" -DescriptionNie "TEST_VALUE" -DescriptionNiew "TEST_VALUE" -DescriptionNisw "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -LastUpdated "TEST_VALUE" -LastUpdatedEmpty "TEST_VALUE" -LastUpdatedGt "TEST_VALUE" -LastUpdatedGte "TEST_VALUE" -LastUpdatedLt "TEST_VALUE" -LastUpdatedLte "TEST_VALUE" -LastUpdatedN "TEST_VALUE" -Limit "TEST_VALUE" -ModifiedByRequest "TEST_VALUE" -Name "TEST_VALUE" -NameEmpty "TEST_VALUE" -NameIc "TEST_VALUE" -NameIe "TEST_VALUE" -NameIew "TEST_VALUE" -NameIsw "TEST_VALUE" -NameN "TEST_VALUE" -NameNic "TEST_VALUE" -NameNie "TEST_VALUE" -NameNiew "TEST_VALUE" -NameNisw "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -Q "TEST_VALUE" -Slug "TEST_VALUE" -SlugEmpty "TEST_VALUE" -SlugIc "TEST_VALUE" -SlugIe "TEST_VALUE" -SlugIew "TEST_VALUE" -SlugIsw "TEST_VALUE" -SlugN "TEST_VALUE" -SlugNic "TEST_VALUE" -SlugNie "TEST_VALUE" -SlugNiew "TEST_VALUE" -SlugNisw "TEST_VALUE" -Tag "TEST_VALUE" -TagN "TEST_VALUE" -UpdatedByRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelGroupsPartialUpdate' {
        It 'Test Invoke-VpnTunnelGroupsPartialUpdate' {
            #$TestResult = Invoke-VpnTunnelGroupsPartialUpdate -Id "TEST_VALUE" -PatchedTunnelGroupRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelGroupsRetrieve' {
        It 'Test Invoke-VpnTunnelGroupsRetrieve' {
            #$TestResult = Invoke-VpnTunnelGroupsRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelGroupsUpdate' {
        It 'Test Invoke-VpnTunnelGroupsUpdate' {
            #$TestResult = Invoke-VpnTunnelGroupsUpdate -Id "TEST_VALUE" -TunnelGroupRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelTerminationsBulkDestroy' {
        It 'Test Invoke-VpnTunnelTerminationsBulkDestroy' {
            #$TestResult = Invoke-VpnTunnelTerminationsBulkDestroy -TunnelTerminationRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelTerminationsBulkPartialUpdate' {
        It 'Test Invoke-VpnTunnelTerminationsBulkPartialUpdate' {
            #$TestResult = Invoke-VpnTunnelTerminationsBulkPartialUpdate -TunnelTerminationRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelTerminationsBulkUpdate' {
        It 'Test Invoke-VpnTunnelTerminationsBulkUpdate' {
            #$TestResult = Invoke-VpnTunnelTerminationsBulkUpdate -TunnelTerminationRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelTerminationsCreate' {
        It 'Test Invoke-VpnTunnelTerminationsCreate' {
            #$TestResult = Invoke-VpnTunnelTerminationsCreate -WritableTunnelTerminationRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelTerminationsDestroy' {
        It 'Test Invoke-VpnTunnelTerminationsDestroy' {
            #$TestResult = Invoke-VpnTunnelTerminationsDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelTerminationsList' {
        It 'Test Invoke-VpnTunnelTerminationsList' {
            #$TestResult = Invoke-VpnTunnelTerminationsList -Created "TEST_VALUE" -CreatedEmpty "TEST_VALUE" -CreatedGt "TEST_VALUE" -CreatedGte "TEST_VALUE" -CreatedLt "TEST_VALUE" -CreatedLte "TEST_VALUE" -CreatedN "TEST_VALUE" -CreatedByRequest "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -Interface "TEST_VALUE" -InterfaceN "TEST_VALUE" -InterfaceId "TEST_VALUE" -InterfaceIdN "TEST_VALUE" -LastUpdated "TEST_VALUE" -LastUpdatedEmpty "TEST_VALUE" -LastUpdatedGt "TEST_VALUE" -LastUpdatedGte "TEST_VALUE" -LastUpdatedLt "TEST_VALUE" -LastUpdatedLte "TEST_VALUE" -LastUpdatedN "TEST_VALUE" -Limit "TEST_VALUE" -ModifiedByRequest "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -OutsideIpId "TEST_VALUE" -OutsideIpIdN "TEST_VALUE" -Q "TEST_VALUE" -Role "TEST_VALUE" -RoleN "TEST_VALUE" -Tag "TEST_VALUE" -TagN "TEST_VALUE" -TerminationType "TEST_VALUE" -TerminationTypeN "TEST_VALUE" -Tunnel "TEST_VALUE" -TunnelN "TEST_VALUE" -TunnelId "TEST_VALUE" -TunnelIdN "TEST_VALUE" -UpdatedByRequest "TEST_VALUE" -Vminterface "TEST_VALUE" -VminterfaceN "TEST_VALUE" -VminterfaceId "TEST_VALUE" -VminterfaceIdN "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelTerminationsPartialUpdate' {
        It 'Test Invoke-VpnTunnelTerminationsPartialUpdate' {
            #$TestResult = Invoke-VpnTunnelTerminationsPartialUpdate -Id "TEST_VALUE" -PatchedWritableTunnelTerminationRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelTerminationsRetrieve' {
        It 'Test Invoke-VpnTunnelTerminationsRetrieve' {
            #$TestResult = Invoke-VpnTunnelTerminationsRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelTerminationsUpdate' {
        It 'Test Invoke-VpnTunnelTerminationsUpdate' {
            #$TestResult = Invoke-VpnTunnelTerminationsUpdate -Id "TEST_VALUE" -WritableTunnelTerminationRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelsBulkDestroy' {
        It 'Test Invoke-VpnTunnelsBulkDestroy' {
            #$TestResult = Invoke-VpnTunnelsBulkDestroy -TunnelRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelsBulkPartialUpdate' {
        It 'Test Invoke-VpnTunnelsBulkPartialUpdate' {
            #$TestResult = Invoke-VpnTunnelsBulkPartialUpdate -TunnelRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelsBulkUpdate' {
        It 'Test Invoke-VpnTunnelsBulkUpdate' {
            #$TestResult = Invoke-VpnTunnelsBulkUpdate -TunnelRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelsCreate' {
        It 'Test Invoke-VpnTunnelsCreate' {
            #$TestResult = Invoke-VpnTunnelsCreate -WritableTunnelRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelsDestroy' {
        It 'Test Invoke-VpnTunnelsDestroy' {
            #$TestResult = Invoke-VpnTunnelsDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelsList' {
        It 'Test Invoke-VpnTunnelsList' {
            #$TestResult = Invoke-VpnTunnelsList -Created "TEST_VALUE" -CreatedEmpty "TEST_VALUE" -CreatedGt "TEST_VALUE" -CreatedGte "TEST_VALUE" -CreatedLt "TEST_VALUE" -CreatedLte "TEST_VALUE" -CreatedN "TEST_VALUE" -CreatedByRequest "TEST_VALUE" -Description "TEST_VALUE" -DescriptionEmpty "TEST_VALUE" -DescriptionIc "TEST_VALUE" -DescriptionIe "TEST_VALUE" -DescriptionIew "TEST_VALUE" -DescriptionIsw "TEST_VALUE" -DescriptionN "TEST_VALUE" -DescriptionNic "TEST_VALUE" -DescriptionNie "TEST_VALUE" -DescriptionNiew "TEST_VALUE" -DescriptionNisw "TEST_VALUE" -Encapsulation "TEST_VALUE" -EncapsulationN "TEST_VALUE" -Group "TEST_VALUE" -GroupN "TEST_VALUE" -GroupId "TEST_VALUE" -GroupIdN "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -IpsecProfile "TEST_VALUE" -IpsecProfileN "TEST_VALUE" -IpsecProfileId "TEST_VALUE" -IpsecProfileIdN "TEST_VALUE" -LastUpdated "TEST_VALUE" -LastUpdatedEmpty "TEST_VALUE" -LastUpdatedGt "TEST_VALUE" -LastUpdatedGte "TEST_VALUE" -LastUpdatedLt "TEST_VALUE" -LastUpdatedLte "TEST_VALUE" -LastUpdatedN "TEST_VALUE" -Limit "TEST_VALUE" -ModifiedByRequest "TEST_VALUE" -Name "TEST_VALUE" -NameEmpty "TEST_VALUE" -NameIc "TEST_VALUE" -NameIe "TEST_VALUE" -NameIew "TEST_VALUE" -NameIsw "TEST_VALUE" -NameN "TEST_VALUE" -NameNic "TEST_VALUE" -NameNie "TEST_VALUE" -NameNiew "TEST_VALUE" -NameNisw "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -Q "TEST_VALUE" -Status "TEST_VALUE" -StatusN "TEST_VALUE" -Tag "TEST_VALUE" -TagN "TEST_VALUE" -Tenant "TEST_VALUE" -TenantN "TEST_VALUE" -TenantGroup "TEST_VALUE" -TenantGroupN "TEST_VALUE" -TenantGroupId "TEST_VALUE" -TenantGroupIdN "TEST_VALUE" -TenantId "TEST_VALUE" -TenantIdN "TEST_VALUE" -TunnelId "TEST_VALUE" -TunnelIdEmpty "TEST_VALUE" -TunnelIdGt "TEST_VALUE" -TunnelIdGte "TEST_VALUE" -TunnelIdLt "TEST_VALUE" -TunnelIdLte "TEST_VALUE" -TunnelIdN "TEST_VALUE" -UpdatedByRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelsPartialUpdate' {
        It 'Test Invoke-VpnTunnelsPartialUpdate' {
            #$TestResult = Invoke-VpnTunnelsPartialUpdate -Id "TEST_VALUE" -PatchedWritableTunnelRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelsRetrieve' {
        It 'Test Invoke-VpnTunnelsRetrieve' {
            #$TestResult = Invoke-VpnTunnelsRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-VpnTunnelsUpdate' {
        It 'Test Invoke-VpnTunnelsUpdate' {
            #$TestResult = Invoke-VpnTunnelsUpdate -Id "TEST_VALUE" -WritableTunnelRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
