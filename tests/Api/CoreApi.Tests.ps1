#
# NetBox REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 3.7.8 (3.7)
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'CoreApi' {
    Context 'Invoke-CoreDataFilesList' {
        It 'Test Invoke-CoreDataFilesList' {
            #$TestResult = Invoke-CoreDataFilesList -Created "TEST_VALUE" -CreatedEmpty "TEST_VALUE" -CreatedGt "TEST_VALUE" -CreatedGte "TEST_VALUE" -CreatedLt "TEST_VALUE" -CreatedLte "TEST_VALUE" -CreatedN "TEST_VALUE" -CreatedByRequest "TEST_VALUE" -Hash "TEST_VALUE" -HashEmpty "TEST_VALUE" -HashIc "TEST_VALUE" -HashIe "TEST_VALUE" -HashIew "TEST_VALUE" -HashIsw "TEST_VALUE" -HashN "TEST_VALUE" -HashNic "TEST_VALUE" -HashNie "TEST_VALUE" -HashNiew "TEST_VALUE" -HashNisw "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -LastUpdated "TEST_VALUE" -LastUpdatedEmpty "TEST_VALUE" -LastUpdatedGt "TEST_VALUE" -LastUpdatedGte "TEST_VALUE" -LastUpdatedLt "TEST_VALUE" -LastUpdatedLte "TEST_VALUE" -LastUpdatedN "TEST_VALUE" -Limit "TEST_VALUE" -ModifiedByRequest "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -Path "TEST_VALUE" -PathEmpty "TEST_VALUE" -PathIc "TEST_VALUE" -PathIe "TEST_VALUE" -PathIew "TEST_VALUE" -PathIsw "TEST_VALUE" -PathN "TEST_VALUE" -PathNic "TEST_VALUE" -PathNie "TEST_VALUE" -PathNiew "TEST_VALUE" -PathNisw "TEST_VALUE" -Q "TEST_VALUE" -Size "TEST_VALUE" -SizeEmpty "TEST_VALUE" -SizeGt "TEST_VALUE" -SizeGte "TEST_VALUE" -SizeLt "TEST_VALUE" -SizeLte "TEST_VALUE" -SizeN "TEST_VALUE" -Source "TEST_VALUE" -SourceN "TEST_VALUE" -SourceId "TEST_VALUE" -SourceIdN "TEST_VALUE" -UpdatedByRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-CoreDataFilesRetrieve' {
        It 'Test Invoke-CoreDataFilesRetrieve' {
            #$TestResult = Invoke-CoreDataFilesRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-CoreDataSourcesBulkDestroy' {
        It 'Test Invoke-CoreDataSourcesBulkDestroy' {
            #$TestResult = Invoke-CoreDataSourcesBulkDestroy -DataSourceRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-CoreDataSourcesBulkPartialUpdate' {
        It 'Test Invoke-CoreDataSourcesBulkPartialUpdate' {
            #$TestResult = Invoke-CoreDataSourcesBulkPartialUpdate -DataSourceRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-CoreDataSourcesBulkUpdate' {
        It 'Test Invoke-CoreDataSourcesBulkUpdate' {
            #$TestResult = Invoke-CoreDataSourcesBulkUpdate -DataSourceRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-CoreDataSourcesCreate' {
        It 'Test Invoke-CoreDataSourcesCreate' {
            #$TestResult = Invoke-CoreDataSourcesCreate -WritableDataSourceRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-CoreDataSourcesDestroy' {
        It 'Test Invoke-CoreDataSourcesDestroy' {
            #$TestResult = Invoke-CoreDataSourcesDestroy -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-CoreDataSourcesList' {
        It 'Test Invoke-CoreDataSourcesList' {
            #$TestResult = Invoke-CoreDataSourcesList -Created "TEST_VALUE" -CreatedEmpty "TEST_VALUE" -CreatedGt "TEST_VALUE" -CreatedGte "TEST_VALUE" -CreatedLt "TEST_VALUE" -CreatedLte "TEST_VALUE" -CreatedN "TEST_VALUE" -CreatedByRequest "TEST_VALUE" -Description "TEST_VALUE" -DescriptionEmpty "TEST_VALUE" -DescriptionIc "TEST_VALUE" -DescriptionIe "TEST_VALUE" -DescriptionIew "TEST_VALUE" -DescriptionIsw "TEST_VALUE" -DescriptionN "TEST_VALUE" -DescriptionNic "TEST_VALUE" -DescriptionNie "TEST_VALUE" -DescriptionNiew "TEST_VALUE" -DescriptionNisw "TEST_VALUE" -Enabled "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -LastUpdated "TEST_VALUE" -LastUpdatedEmpty "TEST_VALUE" -LastUpdatedGt "TEST_VALUE" -LastUpdatedGte "TEST_VALUE" -LastUpdatedLt "TEST_VALUE" -LastUpdatedLte "TEST_VALUE" -LastUpdatedN "TEST_VALUE" -Limit "TEST_VALUE" -ModifiedByRequest "TEST_VALUE" -Name "TEST_VALUE" -NameEmpty "TEST_VALUE" -NameIc "TEST_VALUE" -NameIe "TEST_VALUE" -NameIew "TEST_VALUE" -NameIsw "TEST_VALUE" -NameN "TEST_VALUE" -NameNic "TEST_VALUE" -NameNie "TEST_VALUE" -NameNiew "TEST_VALUE" -NameNisw "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -Q "TEST_VALUE" -Status "TEST_VALUE" -StatusN "TEST_VALUE" -Tag "TEST_VALUE" -TagN "TEST_VALUE" -Type "TEST_VALUE" -TypeN "TEST_VALUE" -UpdatedByRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-CoreDataSourcesPartialUpdate' {
        It 'Test Invoke-CoreDataSourcesPartialUpdate' {
            #$TestResult = Invoke-CoreDataSourcesPartialUpdate -Id "TEST_VALUE" -PatchedWritableDataSourceRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-CoreDataSourcesRetrieve' {
        It 'Test Invoke-CoreDataSourcesRetrieve' {
            #$TestResult = Invoke-CoreDataSourcesRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-CoreDataSourcesSyncCreate' {
        It 'Test Invoke-CoreDataSourcesSyncCreate' {
            #$TestResult = Invoke-CoreDataSourcesSyncCreate -Id "TEST_VALUE" -WritableDataSourceRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-CoreDataSourcesUpdate' {
        It 'Test Invoke-CoreDataSourcesUpdate' {
            #$TestResult = Invoke-CoreDataSourcesUpdate -Id "TEST_VALUE" -WritableDataSourceRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-CoreJobsList' {
        It 'Test Invoke-CoreJobsList' {
            #$TestResult = Invoke-CoreJobsList -Completed "TEST_VALUE" -CompletedAfter "TEST_VALUE" -CompletedBefore "TEST_VALUE" -Created "TEST_VALUE" -CreatedAfter "TEST_VALUE" -CreatedBefore "TEST_VALUE" -Id "TEST_VALUE" -IdEmpty "TEST_VALUE" -IdGt "TEST_VALUE" -IdGte "TEST_VALUE" -IdLt "TEST_VALUE" -IdLte "TEST_VALUE" -IdN "TEST_VALUE" -Interval "TEST_VALUE" -IntervalEmpty "TEST_VALUE" -IntervalGt "TEST_VALUE" -IntervalGte "TEST_VALUE" -IntervalLt "TEST_VALUE" -IntervalLte "TEST_VALUE" -IntervalN "TEST_VALUE" -Limit "TEST_VALUE" -Name "TEST_VALUE" -NameEmpty "TEST_VALUE" -NameIc "TEST_VALUE" -NameIe "TEST_VALUE" -NameIew "TEST_VALUE" -NameIsw "TEST_VALUE" -NameN "TEST_VALUE" -NameNic "TEST_VALUE" -NameNie "TEST_VALUE" -NameNiew "TEST_VALUE" -NameNisw "TEST_VALUE" -ObjectId "TEST_VALUE" -ObjectIdEmpty "TEST_VALUE" -ObjectIdGt "TEST_VALUE" -ObjectIdGte "TEST_VALUE" -ObjectIdLt "TEST_VALUE" -ObjectIdLte "TEST_VALUE" -ObjectIdN "TEST_VALUE" -ObjectType "TEST_VALUE" -ObjectTypeN "TEST_VALUE" -Offset "TEST_VALUE" -Ordering "TEST_VALUE" -Q "TEST_VALUE" -Scheduled "TEST_VALUE" -ScheduledAfter "TEST_VALUE" -ScheduledBefore "TEST_VALUE" -Started "TEST_VALUE" -StartedAfter "TEST_VALUE" -StartedBefore "TEST_VALUE" -Status "TEST_VALUE" -StatusN "TEST_VALUE" -User "TEST_VALUE" -UserN "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-CoreJobsRetrieve' {
        It 'Test Invoke-CoreJobsRetrieve' {
            #$TestResult = Invoke-CoreJobsRetrieve -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
